Mock测试是什么？

mock的意思是模拟，就是在测试过程中，对于某些不容易构造或者不容易获取的对象，用一个虚拟的对象来创建以便测试的测试方法；

这里分为两类测试：一类是前端对接口的mock，一类是后端单元测试中涉及的mock；

单纯的前端mock可以通过抓包工具Fiddler，Charles实现，通过修改代理返回的数据，实现多种场景的测试，实习多种场景的测试；

Mock有什么用？

1.首先在软件测试实际应用当中，有许多场景都需要使用mock功能来代替不需要测试的依赖接口；

2.可以加深对测试的理解，深入明白测试“输入”和“输出”的不同表达形式，帮助我们掌握测试的核心；

哪些时机和场合需要使用mock(when&where)?

1）单元测试/接口测试中测试对象依赖其他对象，这些对象的构造复杂，耗时或者根本无法构造；

2）我们只测试对象内部逻辑的质量，不关心依赖对象的逻辑正确性和稳定性；

我们可以基于以下2个原则去做mock，这样的mock的投入产出比是最高的；

1）不需要对所有的依赖对象/服务进行mock，只对那些构造步骤复杂，构造耗时较长，不稳定的依赖对象/服务进行mock

2）如果做分层测试(比如分层自动化)，高层的测试设计可以基于以下假设：

低层的测试以保证低层对象的质量，高层对低层的依赖可以mock，无需关心所依赖的低层对象的质量；

Local Mock和Remote Mock

区别在于依赖对象的行为调用是本地/远程调用

1.Mock本地依赖对象

如果依赖对象的调用是本地调用，就属于Local Mock。EasyMock/Mockito 都可以实现对本地依赖对象的Mock；

2.Remote Mock

如果被测对象依赖对象的是一些远程服务(HTTP/RPC服务)，就属于Remote Mock，Remote Mock一般实现对指定的服务/接口,客户端（消费者）进行mock。可以通过Mock Server等方式去实现；

·LocalMock相当于Mock对象替换依赖对象；

·RemoteMock相当于使用mockServer替换真实的HTTP/RPC Server

