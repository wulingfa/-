什么是插槽

官方文档解释：Vue实现了一套内容分发的API，将<slot>作为承载分发内容的出口。

个人理解：

插槽本质上是对子组件的扩展，通过<slot>插槽向子组件内部指定位置传递内容

或者说：slot的出现是为了父组件可以正当的再子组件中加入内容；

例：

**有句话叫一个萝卜一个坑，父组件想要在子组件中种萝卜，需要在子组件中挖个坑，就是一个萝卜坑；父组件想要给子组件添加的内容就是萝卜**

**由此可见，萝卜种不种，种什么萝卜由父组件控制；萝卜坑在哪，由子组件控制。换言之，插槽显不显示，怎样显示是由父组件来控制的，而插槽在哪里显示就由子组件来进行控制；**

插槽的使用

1）匿名插槽（单个插槽，默认插槽）

​      匿名插槽就是没有设置name属性的插槽；

​      可以放置在组件的任意位置；

​       一个组件中只能有一个该类插槽；

​      作为找不到匹配的内容片段时的备用插槽；

​      匿名插槽只能作为没有slot属性的元素的插槽；

<div class="child">
    <h1>子组件</h1>
     <slot name="head">头部默认值</slot>
     <slot name="body">主体默认值</slot>
     <slot>这是个匿名插槽(没有name属性)，这串字符是匿名插槽的默认值。</slot>
 </div>

<div class="parent">
 <h1>父组件</h1>
 <child>
     <p slot="body">我是主体</p>
     <p>我是其他内容</p>
     <p slot="footer">我是尾巴</p>
 </child>
 </div>

vue2插槽用法：
<slot name="title">         //子组件

<template slot="title">   //父组件
  <h1>哈哈哈</h1>
</template>          


vue3中子组件用法不变，父组件需要使用v-slot：插槽名

<template v-slot:title>
  <h1>哈哈哈</h1>
</template>









