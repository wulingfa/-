https://www.cnblogs.com/echolun/p/10105223.html

https://segmentfault.com/a/1190000017329980

#### 回流（reflow）和重绘（repaint）

##### 重绘和回流是什么？

怎么去理解这两个概念呢？从字面上理解，重绘，重新上色，较难产生联想的是回流。

我们都知道，一个页面从加载到完成，首先是构建DOM树，然后根据DOM节点的几何属性形成render树（渲染树），当渲染树构建完成，页面就根据DOM树开始布局了，渲染树也根据设置的样式对应的渲染这些节点

在这个过程中，回流与DOM树，渲染树有关，重绘与渲染树有关，如何去理解呢？

比如说我们增删DOM节点，修改一个元素的宽高，页面布局发生变化，DOM树结构发生变化，那么肯定要重新构建DOM树，而DOM树与渲染树是紧密相连的，DOM树构建完，渲染树也会随之对页面进行再次渲染，**这个过程就叫回流**。

当你给一个元素更换颜色，这样的行为是不会影响页面布局的，DOM树不会变化，但颜色变了，渲染树得重新渲染页面，**这就是重绘**

**所以能感觉到，回流的代价要远大于重绘。且回流必然会造成重绘，但重绘不一定会造成回流。**

题外话

1.由于display为none的元素在页面不需要渲染，渲染树构建不会包括这些节点；但visibility为hidden的元素会在渲染树中。因为display为none会脱离文档流，visbility为hidden虽然看不到，但类似于透明度为0，其实还在文档流中，还是有渲染的过程。

2.尽量避免使用表格布局，当我们不为表格td添加固定宽度时，一列的td的宽度会以最宽td的宽作为渲染标准，假设前几行td在渲染时都渲染好了，结果下面某行的一个td特别宽，table为了统一宽，前几行的td会回流重新计算宽度，这是个很耗时的事情。

##### 3.重绘和回流有什么区别

结合上面的解释，引起DOM树结构变化，页面布局变化的行为叫回流，且回流一定伴随重绘。

只是样式的变化，不会引起DOM树变化，页面布局变化的行为叫重绘，且重绘不一定会伴随回流。

回流往往伴随着布局的变化，代价较大；

重绘只是样式的变化，结构不会变化；

##### 4.怎么减少回流

回流要重新构建DOM树，渲染树也得重新渲染，很麻烦，那么那些行为会引起回流，怎么去避免呢？

##### 1.DOM的增删行为

比如要删除某个节点，给某个父元素增加子元素，这类操作都会引起回流。如果要加多个子元素，最好使用documentfragment。

##### 2.几何属性的变化

比如元素宽高变了，border变了，字体大小变了，这种直接会引起页面布局变化的操作也会引起回流，如果你要改变多个属性，最好将这些属性定义在一个class中，直接修改class名，这样只用引起一次回流；

**3.元素位置的变化**

修改一个元素的左右margin，padding之类的操作，所以在做元素位移的动画，不要更改margin之类的属性，使用定位脱离文档流后改变位置会更好。

**4.获取元素的偏移量属性**

例如获取一个元素的scrollTop、scrollLeft、scrollWidth、offsetTop、offsetLeft、offsetWidth、offsetHeight之类的属性，浏览器为了保证值的正确也会回流取得最新的值，所以如果你要多次操作，最取完做个缓存。

**5.页面初次渲染**

这样的回流无法避免

**6.浏览器窗口尺寸改变**

resize事件发生也会引起回流。

这里就不列举引起重绘的行为了，记住，回流一定伴随着重绘，所以上面的行为都会重绘，除此之外，例如修改背景颜色，字体颜色之类不影响布局的行为都只引发重绘。

















